{"version":3,"file":"static/js/881.2734a239.chunk.js","mappings":"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","sources":["components/fetchFunc/fetchFunc.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'ce38b16e348c5ef06da5a87ddf3b3666';\n\nexport const fetchTrending = async () => {\n  const response = await axios\n    .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`)\n    .catch(err => {\n      return console.log(err.message);\n    });\n\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios\n    .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`)\n    .catch(err => {\n      return console.log(err.message);\n    });\n\n  return response;\n};\n\nexport const fetchByQuery = async query => {\n  const response = await axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .catch(err => {\n      return console.log(err.message);\n    });\n\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    )\n    .catch(err => {\n      return console.log(err.message);\n    });\n\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    )\n    .catch(err => {\n      return console.log(err.message);\n    });\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Movies_input__KrUqs\",\"form\":\"Movies_form__4ow+Z\",\"btn\":\"Movies_btn__TlfBQ\",\"linkItem\":\"Movies_linkItem__+ozcD\"};","import { useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchByQuery } from 'components/fetchFunc/fetchFunc';\nimport { useEffect } from 'react';\nimport css from './Movies.module.css';\nimport PropTypes from 'prop-types';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchquery] = useState('');\n  const [queryArr, setQueryArr] = useState([]);\n\n  const { pathname, search } = useLocation();\n  const from = `${pathname}${search}`;\n\n  const hasQuery = searchParams.get('qwery');\n\n  useEffect(() => {\n    if (hasQuery) {\n      fetchByQuery(hasQuery).then(data => setQueryArr(data.results));\n    }\n  }, [hasQuery]);\n\n  const handleQueryChange = e => {\n    const query = e.currentTarget.value.toLowerCase();\n    setSearchquery(query);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      e.target.reset();\n      return;\n    }\n\n    fetchByQuery(searchQuery).then(data => {\n      if (!data.total_results) {\n        setSearchParams({});\n        return console.log('ouuch');\n      }\n\n      setQueryArr(data.results);\n      setSearchParams({ qwery: searchQuery });\n    });\n\n    setSearchquery('');\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <section className={css.form}>\n        <form onSubmit={handleSubmit}>\n          <input\n            value={searchQuery}\n            onChange={handleQueryChange}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search films\"\n            className={css.input}\n          />\n          <button type=\"submit\" className={css.btn}>\n            <span>Search</span>\n          </button>\n        </form>\n      </section>\n      {queryArr && (\n        <ul>\n          {queryArr.map(({ id, title, original_name }) => (\n            <li key={id} className={css.linkItem}>\n              <Link to={`/movies/${id}`} state={{ from: from }}>\n                {title || original_name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Movies;\n\nMovies.propTypes = {\n  fetchByQuery: PropTypes.func,\n  queryArr: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      original_name: PropTypes.string,\n    })\n  ),\n};\n"],"names":["KEY","fetchTrending","axios","catch","err","console","log","message","response","data","results","fetchMovieById","id","fetchByQuery","query","fetchCast","cast","fetchReviews","useSearchParams","searchParams","setSearchParams","useState","searchQuery","setSearchquery","queryArr","setQueryArr","useLocation","pathname","search","from","hasQuery","get","useEffect","then","className","css","onSubmit","e","preventDefault","trim","total_results","qwery","target","reset","value","onChange","currentTarget","toLowerCase","type","autoComplete","autoFocus","placeholder","map","title","original_name","to","state"],"sourceRoot":""}