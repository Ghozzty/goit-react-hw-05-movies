{"version":3,"file":"static/js/888.d40c85cc.chunk.js","mappings":"yOACA,EAA0B,8BAA1B,EAAsE,kC,6BCkFtE,EA1EqB,WAAO,IAAD,EACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAGQC,GAFSC,EAAAA,EAAAA,MAETD,MACFE,EAAI,iBAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAOE,YAAV,QAAkB,KAE5BC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAeX,GAASY,MAAK,SAAAC,GACtBA,IAGLP,GAAU,GACVF,EAAe,OAACS,QAAD,IAACA,OAAD,EAACA,EAAMA,MACvB,GAIF,CAHC,MAAOC,GACPC,QAAQC,IAAIF,GACZV,EAAgB,KACjB,CACF,GAAE,CAACJ,IAEJ,IACQiB,EACNd,EADMc,OAAQC,EACdf,EADce,YAAaC,EAC3BhB,EAD2BgB,MAAOC,EAClCjB,EADkCiB,aAAcC,EAChDlB,EADgDkB,SAAUC,EAC1DnB,EAD0DmB,aAG5D,OAAOjB,GACL,kBAAMkB,UAAWC,EAAjB,WACE,SAAC,KAAD,CAAMC,GAAIhB,EAAV,mBACA,iBAAKc,UAAWC,EAAhB,WACE,gBACEE,IAAKR,EATM,sCASqBA,EAAcS,EAC9CC,IAAI,SACJC,MAAO,OAET,4BACE,0BACGV,EADH,KACYG,EAAaQ,MAAM,KAAK,GADpC,QAGA,wCAAgBV,MAChB,sCACA,uBAAIC,KACJ,oCACA,wBACGJ,EACGA,EAAOc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALD,EAA3B,IACX,iCAIV,gCACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMP,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,KAAD,QAGF,iCACE,SAAC,KAAD,CAAMA,GAAIhB,EAAV,mBACA,6CACA,gBAAKiB,IAAKQ,EAAQN,IAAI,cAAcC,MAAO,QAGhD,C,2MC/EKM,EAAM,mCAECC,EAAa,mCAAG,oGACJC,IAAAA,IAAA,gEACyCF,IAC7DG,OAAM,SAAAC,GACL,OAAOxB,QAAQC,IAAIuB,EAAIC,QACxB,IALwB,cACrBC,EADqB,yBAOpBA,EAAS5B,KAAK6B,SAPM,2CAAH,qDAUb/B,EAAc,mCAAG,WAAMqB,GAAN,uFACLK,IAAAA,IAAA,6CACsBL,EADtB,oBACoCG,IACxDG,OAAM,SAAAC,GACL,OAAOxB,QAAQC,IAAIuB,EAAIC,QACxB,IALyB,cACtBC,EADsB,yBAOrBA,GAPqB,2CAAH,sDAUdE,EAAY,mCAAG,WAAMC,GAAN,uFACHP,IAAAA,IAAA,4DAEkCF,EAFlC,iCAE8DS,EAF9D,gCAIpBN,OAAM,SAAAC,GACL,OAAOxB,QAAQC,IAAIuB,EAAIC,QACxB,IAPuB,cACpBC,EADoB,yBASnBA,GATmB,2CAAH,sDAYZI,EAAS,mCAAG,WAAMb,GAAN,uFACAK,IAAAA,IAAA,6CAEmBL,EAFnB,4BAEyCG,EAFzC,oBAIpBG,OAAM,SAAAC,GACL,OAAOxB,QAAQC,IAAIuB,EAAIC,QACxB,IAPoB,cACjBC,EADiB,yBAShBA,EAAS5B,KAAKiC,MATE,2CAAH,sDAYTC,EAAY,mCAAG,WAAMf,GAAN,uFACHK,IAAAA,IAAA,6CAEmBL,EAFnB,4BAEyCG,EAFzC,2BAIpBG,OAAM,SAAAC,GACL,OAAOxB,QAAQC,IAAIuB,EAAIC,QACxB,IAPuB,cACpBC,EADoB,yBAQnBA,EAAS5B,KAAK6B,SARK,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","components/fetchFunc/fetchFunc.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__cJixg\",\"filmWrapper\":\"MovieDetails_filmWrapper__eVH2A\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation, Outlet } from 'react-router-dom';\nimport { fetchMovieById } from '../fetchFunc/fetchFunc';\n//\nimport css from './MovieDetails.module.css';\nimport placeholder from './placeholder3.jpg';\nimport noInfo from './no-info.jpg';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [currentMovie, setCurrentMovie] = useState([]);\n  const [answer, setAnswer] = useState(false);\n  const location = useLocation();\n  //\n  const { state } = location;\n  const from = state?.from ?? '/';\n\n  useEffect(() => {\n    try {\n      fetchMovieById(movieId).then(data => {\n        if (!data) {\n          return;\n        }\n        setAnswer(true);\n        setCurrentMovie(data?.data);\n      });\n    } catch (error) {\n      console.log(error);\n      setCurrentMovie(null);\n    }\n  }, [movieId]);\n\n  const baseUrlImg = 'https://image.tmdb.org/t/p/original';\n  const { genres, poster_path, title, vote_average, overview, release_date } =\n    currentMovie;\n\n  return answer ? (\n    <main className={css.wrapper}>\n      <Link to={from}>Back</Link>\n      <div className={css.filmWrapper}>\n        <img\n          src={poster_path ? baseUrlImg + poster_path : placeholder}\n          alt=\"poster\"\n          width={300}\n        />\n        <div>\n          <h1>\n            {title} ({release_date.split('-')[0]})\n          </h1>\n          <p>User score: {vote_average}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <ul>\n            {genres\n              ? genres.map(({ id, name }) => <li key={id}>{name}</li>)\n              : 'Sorry, no genres info'}\n          </ul>\n        </div>\n      </div>\n      <section>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </section>\n      <Outlet />\n    </main>\n  ) : (\n    <>\n      <Link to={from}>Back</Link>\n      <div>Sorry, no info</div>\n      <img src={noInfo} alt=\"placeholder\" width={500} />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = 'ce38b16e348c5ef06da5a87ddf3b3666';\n\nexport const fetchTrending = async () => {\n  const response = await axios\n    .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`)\n    .catch(err => {\n      return console.log(err.message);\n    });\n\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios\n    .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`)\n    .catch(err => {\n      return console.log(err.message);\n    });\n\n  return response;\n};\n\nexport const fetchByQuery = async query => {\n  const response = await axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .catch(err => {\n      return console.log(err.message);\n    });\n\n  return response;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    )\n    .catch(err => {\n      return console.log(err.message);\n    });\n\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    )\n    .catch(err => {\n      return console.log(err.message);\n    });\n  return response.data.results;\n};\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\n//https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n\n// https://api.themoviedb.org/3/search/movie?api_key=key=${KEY}&language=en-US&query=batman&page=1&include_adult=false\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\n// // const KEY = 'ce38b16e348c5ef06da5a87ddf3b3666';\n// https://api.themoviedb.org/3/trending/all/day?api_key=ce38b16e348c5ef06da5a87ddf3b3666\n//movie https://api.themoviedb.org/3/movie/{movie_id}?api_key=ce38b16e348c5ef06da5a87ddf3b3666&language=en-US\n"],"names":["movieId","useParams","useState","currentMovie","setCurrentMovie","answer","setAnswer","state","useLocation","from","useEffect","fetchMovieById","then","data","error","console","log","genres","poster_path","title","vote_average","overview","release_date","className","css","to","src","placeholder","alt","width","split","map","id","name","noInfo","KEY","fetchTrending","axios","catch","err","message","response","results","fetchByQuery","query","fetchCast","cast","fetchReviews"],"sourceRoot":""}