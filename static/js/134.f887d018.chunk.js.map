{"version":3,"file":"static/js/134.f887d018.chunk.js","mappings":"2TAEMA,EAAM,mCAECC,EAAa,mCAAG,oGACJC,IAAAA,IAAA,gEACyCF,IAC7DG,OAAM,SAAAC,GACL,OAAOC,QAAQC,IAAIF,EAAIG,QACxB,IALwB,cACrBC,EADqB,yBAOpBA,EAASC,KAAKC,SAPM,2CAAH,qDAUbC,EAAc,mCAAG,WAAMC,GAAN,uFACLV,IAAAA,IAAA,6CACsBU,EADtB,oBACoCZ,IACxDG,OAAM,SAAAC,GACL,OAAOC,QAAQC,IAAIF,EAAIG,QACxB,IALyB,cACtBC,EADsB,yBAOrBA,GAPqB,2CAAH,sDAUdK,EAAY,mCAAG,WAAMC,GAAN,uFACHZ,IAAAA,IAAA,4DAEkCF,EAFlC,iCAE8Dc,EAF9D,gCAIpBX,OAAM,SAAAC,GACL,OAAOC,QAAQC,IAAIF,EAAIG,QACxB,IAPuB,cACpBC,EADoB,yBASnBA,GATmB,2CAAH,sDAYZO,EAAS,mCAAG,WAAMH,GAAN,uFACAV,IAAAA,IAAA,6CAEmBU,EAFnB,4BAEyCZ,EAFzC,oBAIpBG,OAAM,SAAAC,GACL,OAAOC,QAAQC,IAAIF,EAAIG,QACxB,IAPoB,cACjBC,EADiB,yBAShBA,EAASC,KAAKO,MATE,2CAAH,sDAYTC,EAAY,mCAAG,WAAML,GAAN,uFACHV,IAAAA,IAAA,6CAEmBU,EAFnB,4BAEyCZ,EAFzC,2BAIpBG,OAAM,SAAAC,GACL,OAAOC,QAAQC,IAAIF,EAAIG,QACxB,IAPuB,cACpBC,EADoB,yBAQnBA,EAASC,KAAKC,SARK,2CAAH,qD,4FCmCzB,UA9Ee,WACb,OAAwCQ,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCC,EAAAA,EAAAA,WACpC,kBAAMF,EAAaG,IAAI,UAAY,EAAnC,IADF,eAAOC,EAAP,KAAoBC,EAApB,KAGA,GAAgCH,EAAAA,EAAAA,UAAS,IAAzC,eAAOI,EAAP,KAAiBC,EAAjB,KAEA,GAA6BC,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OACZC,EAAI,UAAMF,GAAN,OAAiBC,GAqC3B,OACE,iCACE,6BACE,kBAAME,SAxBS,SAAAC,GACnBA,EAAEC,iBAEyB,KAAvBV,EAAYW,SAKhBrB,EAAAA,EAAAA,IAAaU,GAAaY,MAAK,SAAA1B,GAC7B,GAAoB,MAAhBA,EAAK2B,SAAmB3B,EAAKA,KAAK4B,cAEpC,OADAjB,EAAgB,CAAC,GACVf,QAAQC,IAAI,SAGrBoB,EAAYjB,EAAKA,KAAKC,QACvB,IACDU,EAAgB,CAAEkB,MAAOf,IACzBC,EAAe,IACfQ,EAAEO,OAAOC,SAdPR,EAAEO,OAAOC,OAeZ,EAKK,WACE,kBACEC,MAAOlB,EACPmB,SAhCgB,SAAAV,GACxB,IAAMlB,EAAQkB,EAAEW,cAAcF,MAAMG,cACpCpB,EAAeV,EAChB,EA8BS+B,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBAEd,mBAAQH,KAAK,SAAb,UACE,4CAILpB,EAASwB,QACR,wBACGxB,EAASyB,KAAI,gBAAGtC,EAAH,EAAGA,GAAIuC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,cAAd,OACZ,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAazC,GAAM0C,MAAO,CAAExB,KAAMA,GAA1C,SACGqB,GAASC,KAFLxC,EADG,OAShB,yCAIP,C","sources":["components/fetchFunc/fetchFunc.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'ce38b16e348c5ef06da5a87ddf3b3666';\n\nexport const fetchTrending = async () => {\n  const response = await axios\n    .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`)\n    .catch(err => {\n      return console.log(err.message);\n    });\n\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios\n    .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`)\n    .catch(err => {\n      return console.log(err.message);\n    });\n\n  return response;\n};\n\nexport const fetchByQuery = async query => {\n  const response = await axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .catch(err => {\n      return console.log(err.message);\n    });\n\n  return response;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    )\n    .catch(err => {\n      return console.log(err.message);\n    });\n\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    )\n    .catch(err => {\n      return console.log(err.message);\n    });\n  return response.data.results;\n};\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\n//https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n\n// https://api.themoviedb.org/3/search/movie?api_key=key=${KEY}&language=en-US&query=batman&page=1&include_adult=false\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\n// // const KEY = 'ce38b16e348c5ef06da5a87ddf3b3666';\n// https://api.themoviedb.org/3/trending/all/day?api_key=ce38b16e348c5ef06da5a87ddf3b3666\n//movie https://api.themoviedb.org/3/movie/{movie_id}?api_key=ce38b16e348c5ef06da5a87ddf3b3666&language=en-US\n","import { useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchByQuery } from 'components/fetchFunc/fetchFunc';\n// import { useEffect } from 'react';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchquery] = useState(\n    () => searchParams.get('qwery') || ''\n  );\n  const [queryArr, setQueryArr] = useState([]);\n\n  const { pathname, search } = useLocation();\n  const from = `${pathname}${search}`;\n\n  // useEffect(() => {\n  //   if (!searchQuery) {\n  //     setSearchParams({});\n  //     return;\n  //   }\n  //   fetchByQuery(searchQuery).then(data => setQueryArr(data.data.results));\n  //   setSearchquery('');\n  // }, []);\n\n  const handleQueryChange = e => {\n    const query = e.currentTarget.value.toLowerCase();\n    setSearchquery(query);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      e.target.reset();\n      return;\n    }\n\n    fetchByQuery(searchQuery).then(data => {\n      if (data.status !== 200 || !data.data.total_results) {\n        setSearchParams({});\n        return console.log('ouuch');\n      }\n\n      setQueryArr(data.data.results);\n    });\n    setSearchParams({ qwery: searchQuery });\n    setSearchquery('');\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <header>\n        <form onSubmit={handleSubmit}>\n          <input\n            value={searchQuery}\n            onChange={handleQueryChange}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search films\"\n          />\n          <button type=\"submit\">\n            <span>Search</span>\n          </button>\n        </form>\n      </header>\n      {queryArr.length ? (\n        <ul>\n          {queryArr.map(({ id, title, original_name }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: from }}>\n                {title || original_name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>set query</div>\n      )}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["KEY","fetchTrending","axios","catch","err","console","log","message","response","data","results","fetchMovieById","id","fetchByQuery","query","fetchCast","cast","fetchReviews","useSearchParams","searchParams","setSearchParams","useState","get","searchQuery","setSearchquery","queryArr","setQueryArr","useLocation","pathname","search","from","onSubmit","e","preventDefault","trim","then","status","total_results","qwery","target","reset","value","onChange","currentTarget","toLowerCase","type","autoComplete","autoFocus","placeholder","length","map","title","original_name","to","state"],"sourceRoot":""}