{"version":3,"file":"static/js/186.fdce07ed.chunk.js","mappings":"iMA+BA,UA1BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAWI,EAAf,GAGhC,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACT,IAEGG,EAAQS,QACb,wBACGT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACX,2BACE,wBAAKA,KACL,uBAAID,MAFGD,EADE,OAQf,qEAEH,C,2MC3BKG,EAAM,mCAECC,EAAa,mCAAG,oGACJC,IAAAA,IAAA,gEACyCF,IAC7DG,OAAM,SAAAC,GACL,OAAOX,QAAQC,IAAIU,EAAIC,QACxB,IALwB,cACrBC,EADqB,yBAOpBA,EAASf,KAAKgB,SAPM,2CAAH,qDAUbC,EAAc,mCAAG,WAAMX,GAAN,uFACLK,IAAAA,IAAA,6CACsBL,EADtB,oBACoCG,IACxDG,OAAM,SAAAC,GACL,OAAOX,QAAQC,IAAIU,EAAIC,QACxB,IALyB,cACtBC,EADsB,yBAOrBA,GAPqB,2CAAH,sDAUdG,EAAY,mCAAG,WAAMC,GAAN,uFACHR,IAAAA,IAAA,4DAEkCF,EAFlC,iCAE8DU,EAF9D,gCAIpBP,OAAM,SAAAC,GACL,OAAOX,QAAQC,IAAIU,EAAIC,QACxB,IAPuB,cACpBC,EADoB,yBASnBA,EAASf,MATU,2CAAH,sDAYZoB,EAAS,mCAAG,WAAMd,GAAN,uFACAK,IAAAA,IAAA,6CAEmBL,EAFnB,4BAEyCG,EAFzC,oBAIpBG,OAAM,SAAAC,GACL,OAAOX,QAAQC,IAAIU,EAAIC,QACxB,IAPoB,cACjBC,EADiB,yBAShBA,EAASf,KAAKqB,MATE,2CAAH,sDAYTvB,EAAY,mCAAG,WAAMQ,GAAN,uFACHK,IAAAA,IAAA,6CAEmBL,EAFnB,4BAEyCG,EAFzC,2BAIpBG,OAAM,SAAAC,GACL,OAAOX,QAAQC,IAAIU,EAAIC,QACxB,IAPuB,cACpBC,EADoB,yBAQnBA,EAASf,KAAKgB,SARK,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/fetchFunc/fetchFunc.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'components/fetchFunc/fetchFunc';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    try {\n      fetchReviews(movieId).then(data => setReviews(data));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  return reviews.length ? (\n    <ul>\n      {reviews.map(({ id, content, author }) => (\n        <li key={id}>\n          <h3>{author}</h3>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <div>We don't have any reviews for this movie</div>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  movieId: PropTypes.number,\n  id: PropTypes.number,\n  fetchReviews: PropTypes.func,\n  content: PropTypes.string,\n  author: PropTypes.string,\n};\n","import axios from 'axios';\n\nconst KEY = 'ce38b16e348c5ef06da5a87ddf3b3666';\n\nexport const fetchTrending = async () => {\n  const response = await axios\n    .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`)\n    .catch(err => {\n      return console.log(err.message);\n    });\n\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios\n    .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}`)\n    .catch(err => {\n      return console.log(err.message);\n    });\n\n  return response;\n};\n\nexport const fetchByQuery = async query => {\n  const response = await axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .catch(err => {\n      return console.log(err.message);\n    });\n\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    )\n    .catch(err => {\n      return console.log(err.message);\n    });\n\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    )\n    .catch(err => {\n      return console.log(err.message);\n    });\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","then","data","error","console","log","length","map","id","content","author","KEY","fetchTrending","axios","catch","err","message","response","results","fetchMovieById","fetchByQuery","query","fetchCast","cast"],"sourceRoot":""}